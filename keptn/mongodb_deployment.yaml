apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-08-07T18:08:26Z"
  generation: 1
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: keptn
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: keptn-keptn
    app.kubernetes.io/version: "1"
    helm.sh/chart: mongodb-0.7.0
  name: mongodb
  namespace: keptn
  resourceVersion: "9895682"
  selfLink: /apis/apps/v1/namespaces/keptn/deployments/mongodb
  uid: fa601a3f-0982-4b08-b962-a2b91914f30d
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: keptn
      app.kubernetes.io/name: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: keptn
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/part-of: keptn-keptn
        app.kubernetes.io/version: "1"
        helm.sh/chart: mongodb-0.7.0
    spec:
      containers:
      - env:
        - name: MONGODB_DATABASE
          value: keptn
        - name: MONGODB_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: mongodb-credentials
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongodb-credentials
        - name: MONGODB_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin_password
              name: mongodb-credentials
        image: docker.io/centos/mongodb-36-centos7:1
        imagePullPolicy: IfNotPresent
        name: mongodb
        ports:
        - containerPort: 27017
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        #volumeMounts:
        #- mountPath: /var/lib/mongodb/data
        #  name: mongodata
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 184
      serviceAccount: keptn-default
      serviceAccountName: keptn-default
      terminationGracePeriodSeconds: 30
      #volumes:
      #- name: mongodata
      #  persistentVolumeClaim:
      #    claimName: mongodata
status:
  conditions:
  - lastTransitionTime: "2020-08-07T18:08:36Z"
    lastUpdateTime: "2020-08-07T18:08:36Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2020-08-07T18:08:35Z"
    lastUpdateTime: "2020-08-07T18:11:33Z"
    message: ReplicaSet "mongodb-7b6957fb57" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
